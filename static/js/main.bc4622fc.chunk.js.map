{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/imageGallery/ImageGallery.module.css","components/button/Button.module.css","components/spinner/Spinner.module.css","components/searchbar/Searchbar.module.css","components/searchbar/Searchbar.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/imageGallery/ImageGallery.jsx","components/button/Button.jsx","components/modal/Modal.jsx","components/spinner/Spinner.jsx","components/API/API.jsx","App.js","index.js"],"names":["module","exports","toast","configure","Searchbar","state","query","searchQuery","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","error","className","s","SearchForm","this","type","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","itemId","webformatURL","tags","onClick","src","alt","ImageGallery","data","openModal","getImageForModal","map","id","Button","Modal","largeImageUrl","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","Overlay","target","Spinner","spinner","color","height","width","timeout","API","page","axios","get","then","res","status","hits","transition","Flip","scrollPageDown","scrollTo","top","document","documentElement","scrollHeight","behavior","App","useState","showModal","setShowModal","loading","setLoading","images","setImages","setQuery","setPage","modalContent","setModalContent","prevImages","finally","toggleModal","isNotLastPage","length","btnEnable","element","find","largeImageURL","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc4622fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3FR0I\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__WZzkn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2UYGS\",\"Modal\":\"Modal_Modal__3l2Jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3JXxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__oCPpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__20en3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__21KRw\",\"SearchForm\":\"Searchbar_SearchForm__2AunT\",\"SearchForm-button\":\"Searchbar_SearchForm-button__UNH6G\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__UtCvK\",\"SearchForm-input\":\"Searchbar_SearchForm-input__23Zfl\"};","import React, {Component} from 'react';\r\nimport { toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { IoIosSearch } from \"react-icons/io\";\r\nimport s from '../searchbar/Searchbar.module.css';\r\n// import PropTypes from 'prop-types';\r\n\r\ntoast.configure()\r\n\r\nexport default class Searchbar extends Component{\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n  \r\n  searchQuery = e  => { this.setState({ query:  e.currentTarget.value})}\r\n\r\n  handleSubmit = e => {\r\n        e.preventDefault();\r\n         if (this.state.query.trim() === '') {\r\n          toast.error('Please, enter a name!');\r\n          return;\r\n        }\r\n        this.setState({query: ''})\r\n        this.props.onSubmit(this.state.query);\r\n    }\r\n\r\nrender(){\r\n  return (\r\n     <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n        <button type=\"submit\" className={s['SearchForm-button']}>< IoIosSearch/>\r\n        </button>\r\n\r\n        <input\r\n          name='query'\r\n          className={s['SearchForm-input']}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={this.searchQuery}\r\n          value={this.state.query}\r\n        />\r\n      </form>\r\n    </header>\r\n   )\r\n}\r\n}\r\n// Searchbar.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport s from '../imageGalleryItem/ImageGalleryItem.module.css';\r\nexport default function ImageGalleryItem({\r\n  itemId,\r\n  webformatURL,\r\n  tags,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        className={s['ImageGalleryItem-image']}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        onClick={() => {\r\n          onClick(itemId);\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n}\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from 'components/imageGalleryItem/ImageGalleryItem';\r\nimport s from '../imageGallery/ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ data,openModal, getImageForModal}) {\r\n  return (\r\n      <ul className={s.ImageGallery} onClick={openModal}>\r\n          {data.map(({ id, webformatURL, tags }) => {\r\n            return (\r\n              <ImageGalleryItem \r\n                key={id}\r\n                webformatURL={webformatURL }\r\n                tags={tags}\r\n                onClick={getImageForModal}\r\n                itemId={id}\r\n              />\r\n            );\r\n      })}\r\n      </ul>\r\n    )\r\n   }\r\n\r\n\r\nImageGallery.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string,\r\n    })\r\n  ),\r\n  openModal: PropTypes.func,\r\n  getImageForModal: PropTypes.func,\r\n};","import s from '../button/Button.module.css';\r\n\r\nexport default function Button({onClick}) {\r\n    return (\r\n        <button type='button' onClick={onClick} className={s.Button} >More</button>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport s from '../modal/Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Modal({ largeImageUrl, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImageUrl} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  largeImageUrl: PropTypes.string.isRequired,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from '../spinner/Spinner.module.css';\r\n\r\nexport default function Spinner() {\r\n    return (\r\n         \r\n        <div>\r\n            <Loader\r\n                className = { s.spinner }\r\n                    type=\"ThreeDots\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs  \r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst API_KEY = '23477819-44226e1e125dfcf9362a81201';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\ntoast.configure();\r\n\r\nexport default function API(query, page) {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`,\r\n    )\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        const { hits } = res.data;\r\n        return hits;\r\n      }\r\n      if (res.status === 404) {\r\n        toast.error('Images are not exist', { transition: Flip });\r\n      }\r\n    });\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast, Bounce } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Searchbar from 'components/searchbar/Searchbar';\r\nimport ImageGallery from 'components/imageGallery/ImageGallery';\r\nimport Button from 'components/button/Button';\r\nimport Modal from 'components/modal/Modal';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport API from 'components/API/API';\r\n\r\ntoast.configure();\r\n\r\nfunction scrollPageDown() {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n}\r\n\r\nexport default function App() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [modalContent, setModalContent] = useState('');\r\n\r\n  const handleFormSubmit = query => {\r\n    setPage(1);\r\n    setQuery(query);\r\n  };\r\n  useEffect(() => {\r\n    if (!query) return;\r\n    setLoading(true);\r\n    setPage(1);\r\n    setImages([]);\r\n    const getResults = () => {\r\n      API(query, page)\r\n        .then(hits => {\r\n          if (hits.length === 0) {\r\n            toast.warn('There are no images. Try another request, please', {\r\n              transition: Bounce,\r\n            });\r\n          }\r\n          setImages([...hits]);\r\n          scrollPageDown();\r\n        })\r\n        .finally(() => {\r\n          return setLoading(false);\r\n        });\r\n    };\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    API(query, page)\r\n      .then(hits => {\r\n        setImages(prevImages => {\r\n          return [...prevImages, ...hits];\r\n        });\r\n        scrollPageDown();\r\n      })\r\n      .finally(() => {\r\n        return setLoading(false);\r\n      });\r\n  }, [page]);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const getImageForModal = itemId => {\r\n    const element = images.find(({ id }) => id === itemId);\r\n    setModalContent(element.largeImageURL);\r\n  };\r\n  const pageIncrement = () => {\r\n    setPage(prevPage => {\r\n      return prevPage + 1;\r\n    });\r\n  };\r\n  const isNotLastPage = images.length / page === 12;\r\n  const btnEnable = images.length > 0 && !loading && isNotLastPage;\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {images.length !== 0 && (\r\n        <ImageGallery\r\n          data={images}\r\n          getImageForModal={getImageForModal}\r\n          openModal={toggleModal}\r\n        />\r\n      )}\r\n      {loading && <Spinner />}\r\n      {showModal && (\r\n        <Modal onClose={toggleModal} largeImageUrl={modalContent} />\r\n      )}\r\n      {btnEnable && <Button onClick={pageIncrement} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}